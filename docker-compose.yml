version: '3.8'

services:
  app:
    build: .
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    
    volumes:
      - .:/var/www
    depends_on:
      - mysql
    networks:
      - laravel_network

 
version: '3.8'

services:
  app:
    build: .
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    
    volumes:
      - .:/var/www
    depends_on:
      - mysql
    networks:
      - laravel_network

 

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
      - laravel_network
  nginx:
      image: nginx:alpine
      container_name: nginx-container
      restart: unless-stopped
      ports:
        - 8000:80
      volumes:
        - ./:/var/www
        -  ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      networks:
        - laravel_network
 

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: crudapi
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - laravel_network

 

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
